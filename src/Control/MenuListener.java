/*
 * Copyright 2017 Filippo Stella.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Control;

import Model.Connessione.Connection;
import View.Aggiunta.FrameAggiunta;
import View.Aggiunta.PannelloAggiunta;
import View.Impostazioni.FrameImpostazioni;
import View.MainFrame;
import View.PannelloLuci;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Filippo Stella
 * @version 1.0
 */
public class MenuListener implements ActionListener{

    private final Connection cn;
    private final MainFrame mf;
    private final FrameAggiunta fa;
    private final PannelloAggiunta pa;
    private final FrameImpostazioni fi;
    private final PannelloLuci pl;

    /**
    * Constructor for the Menu Listener
    * <p>
    * This method is the constructor for the Menu Listener
    * it creates the behaviour of the munuBar.
    * 
    * @param mf     The MainFrame the main frame, this is the main interface of this program
    * @param fa     The FrameAggiunta this frame is used to add a new light
    * @param cn     The Connection class is used to manage the TCP connection to a device
    * @param fi     The FrameImpostazioni is used to set the IP and port of the device to connect to;
    */
    public MenuListener(MainFrame mf, PannelloLuci pl, FrameAggiunta fa, Connection cn, FrameImpostazioni fi) {
        this.fa = fa;
        this.mf = mf;
        this.cn = cn;
        this.fi = fi;
        this.pl = pl;
        this.pa = ((PannelloAggiunta)this.fa.getContentPane());
        this.mf.MenuListener(this);
    }
    
    /**
    * This method defines the behaviour of the JmenuItems
    * <p>
    * This method defines the behaviour of JmenuItems
    * 
    * @param ae     This is the event generated by the pression of a JmenuItem
    */    
    @Override
    public void actionPerformed(ActionEvent ae) {
        if(ae.getSource()==this.mf.getI_NuovaLampada()){
            this.pa.init();
            this.fa.setLocationRelativeTo(this.mf);
            this.fa.setVisible(true);
        }
        else if(ae.getSource()==this.mf.getI_impostazioni()){
            fi.setLocationRelativeTo(mf);
            fi.setVisible(true);
        }
        else if(ae.getSource()==this.mf.getI_info()){
            JOptionPane.showMessageDialog(this.mf, "Versione "+MyConstants.PROGRAM_VERSION+"\n\nCredits:\nNasato Elia\nStella Filippo\nBrunello Giacomo", "Informazioni", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(ae.getSource()==this.mf.getCbi_connect()){
            if(this.mf.getCbi_connect().isSelected()){
                System.out.println("In connessione");
                this.cn.connectTo((byte)Integer.parseInt(this.fi.getIP1().getText()), (byte)Integer.parseInt(this.fi.getIP2().getText()), (byte)Integer.parseInt(this.fi.getIP3().getText()), (byte)Integer.parseInt(this.fi.getIP4().getText()), Integer.parseInt(this.fi.getPORT().getText()));
            }
            else{
                System.out.println("In disconnessione");
                this.cn.closeConnection();
            }
            this.mf.getCbi_connect().setSelected(false);
        }
        else if(ae.getSource()==this.mf.getCbi_modifica()){
            
        }
        else{
            throw new UnsupportedOperationException("Not supported yet.");
        }
    }
}
