/*
 * Copyright 2017 Filippo Stella.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package Control;

import Model.GestioneLuci;
import View.Aggiunta.PannelloAggiunta;
import View.Modifica.PannelloModifica;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Filippo Stella
 * @version 1.0
 */
public class listenerCombo implements ItemListener{
    
    private final PannelloAggiunta pa;
    private final GestioneLuci gl;
    private final PannelloModifica pm;

    /**
    * Contructor for the Listener Combo
    * <p>
    * This method is the constructor for the Listener Combo
    * it build the class wich is responsible for the behaviour
    * of the combo box
    * 
    * @param pa     The PannelloAggiunta the panel contained in the frame with wich you can add a new light
    * @param pm     The PannelloMain this panel contains the mode selection, the rgb slider, the delay selector and the apply button
    * @param gl     The GestioneLuci this class is the class that manage the lights
    */
    public listenerCombo(PannelloAggiunta pa, PannelloModifica pm, GestioneLuci gl) {
        this.gl = gl;
        this.pa = pa;
        this.pm = pm;
        this.pa.listenerCombo(this);
        this.pm.listenerCombo(this);
    }
    
    /**
    * This method defines the behavior of the JcomboBox
    * <p>
    * This method defines the behavior of JComboBox contained
    * in the edit panel and the add panel
    * 
    * @param ie     This is the event generated by state change of a JComboBox
    */ 
    @Override
    public void itemStateChanged(ItemEvent ie) {
        if(ie.getSource()==this.pa.getCb_tipo()){
            if(((String)this.pa.getCb_tipo().getSelectedItem()).compareTo("RGB")==0){
                this.pa.getB_ok().setEnabled(true);
                this.pa.getS_start().setEnabled(true);
                this.pa.getS_canali().setEnabled(false);
                this.pa.getS_canaleR().setEnabled(false);
                this.pa.getS_canaleG().setEnabled(false);
                this.pa.getS_canaleG().setEnabled(false);
                this.pa.getS_canaleB().setEnabled(false);
                this.pa.getS_start().setValue(this.gl.getLastChannel());
                this.pa.getS_canali().setValue(3);
                this.pa.getS_canaleR().setValue(this.gl.getLastChannel());
                this.pa.getS_canaleG().setValue(this.gl.getLastChannel()+1);
                this.pa.getS_canaleB().setValue(this.gl.getLastChannel()+2);
            }
            else if(((String)this.pa.getCb_tipo().getSelectedItem()).compareTo("Generic Lamp")==0){
                this.pa.getB_ok().setEnabled(true);   
                this.pa.getS_start().setEnabled(true);
                this.pa.getS_canali().setEnabled(true);
                this.pa.getS_canaleR().setEnabled(true);
                this.pa.getS_canaleG().setEnabled(true);
                this.pa.getS_canaleG().setEnabled(true);
                this.pa.getS_canaleB().setEnabled(true);
                this.pa.getS_start().setModel(new SpinnerNumberModel((Number)this.gl.getLastChannel(), 0, 512, 1));
                this.pa.getS_canali().setValue(1);
                this.pa.getS_canaleR().setModel(new SpinnerNumberModel((Number)this.gl.getLastChannel(), 0, 512, 1));
                this.pa.getS_canaleG().setModel(new SpinnerNumberModel((Number)this.gl.getLastChannel(), 0, 512, 1));
                this.pa.getS_canaleB().setModel(new SpinnerNumberModel((Number)this.gl.getLastChannel(), 0, 512, 1));
            }
            else if(((String)this.pa.getCb_tipo().getSelectedItem()).compareTo("Karma DJ359LED")==0){
                this.pa.getB_ok().setEnabled(true);
                this.pa.getS_start().setEnabled(true);
                this.pa.getS_canali().setEnabled(false);
                this.pa.getS_canaleR().setEnabled(false);
                this.pa.getS_canaleG().setEnabled(false);
                this.pa.getS_canaleG().setEnabled(false);
                this.pa.getS_canaleB().setEnabled(false);
                this.pa.getS_start().setValue(this.gl.getLastChannel());
                this.pa.getS_canali().setValue(6);
                this.pa.getS_canaleR().setValue(this.gl.getLastChannel()+1);
                this.pa.getS_canaleG().setValue(this.gl.getLastChannel()+2);
                this.pa.getS_canaleB().setValue(this.gl.getLastChannel()+3);
            }
            else{
                this.pa.getB_ok().setEnabled(false);
                this.pa.getS_start().setEnabled(false);
                this.pa.getS_canali().setEnabled(false);
                this.pa.getS_canaleR().setEnabled(false);
                this.pa.getS_canaleG().setEnabled(false);
                this.pa.getS_canaleG().setEnabled(false);
                this.pa.getS_canaleB().setEnabled(false);
            }
        }
        else if(ie.getSource()==this.pm.getCb_tipo()){
            if(((String)this.pm.getCb_tipo().getSelectedItem()).compareTo("RGB")==0){
                this.pm.getB_modifica().setEnabled(true);
                this.pm.getS_start().setEnabled(true);
                this.pm.getS_canali().setEnabled(false);
                this.pm.getS_canaleR().setEnabled(false);
                this.pm.getS_canaleG().setEnabled(false);
                this.pm.getS_canaleG().setEnabled(false);
                this.pm.getS_canaleB().setEnabled(false);
                this.pm.getS_canali().setValue(3);
                this.pm.getS_canaleR().setValue(this.pm.getS_start().getValue());
                this.pm.getS_canaleG().setValue(((Integer)this.pm.getS_start().getValue())+1);
                this.pm.getS_canaleB().setValue(((Integer)this.pm.getS_start().getValue())+2);
            }
            else if(((String)this.pm.getCb_tipo().getSelectedItem()).compareTo("Generic Lamp")==0){
                this.pm.getB_modifica().setEnabled(true);   
                this.pm.getS_start().setEnabled(true);
                this.pm.getS_canali().setEnabled(true);
                this.pm.getS_canaleR().setEnabled(true);
                this.pm.getS_canaleG().setEnabled(true);
                this.pm.getS_canaleG().setEnabled(true);
                this.pm.getS_canaleB().setEnabled(true);
            }
            else if(((String)this.pm.getCb_tipo().getSelectedItem()).compareTo("Karma DJ359LED")==0){
                this.pm.getB_modifica().setEnabled(true);
                this.pm.getS_start().setEnabled(true);
                this.pm.getS_canali().setEnabled(false);
                this.pm.getS_canaleR().setEnabled(false);
                this.pm.getS_canaleG().setEnabled(false);
                this.pm.getS_canaleG().setEnabled(false);
                this.pm.getS_canaleB().setEnabled(false);
                this.pm.getS_canali().setValue(6);
                this.pm.getS_canaleR().setValue(((Integer)this.pm.getS_start().getValue())+1);
                this.pm.getS_canaleG().setValue(((Integer)this.pm.getS_start().getValue())+2);
                this.pm.getS_canaleB().setValue(((Integer)this.pm.getS_start().getValue())+3);
            }
            else{
                this.pm.getB_modifica().setEnabled(false);
                this.pm.getS_start().setEnabled(false);
                this.pm.getS_canali().setEnabled(false);
                this.pm.getS_canaleR().setEnabled(false);
                this.pm.getS_canaleG().setEnabled(false);
                this.pm.getS_canaleG().setEnabled(false);
                this.pm.getS_canaleB().setEnabled(false);
            }
        }
        else{
            throw new UnsupportedOperationException("Not supported yet.");
        }
    }
    
}
